// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MoayadAPI.Models;

namespace MoayadAPI.Data
{
    public partial class Cloth_Factory_MoayadContext : DbContext
    {
        public Cloth_Factory_MoayadContext()
        {
        }

        public Cloth_Factory_MoayadContext(DbContextOptions<Cloth_Factory_MoayadContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemsBalance> ItemsBalances { get; set; }
        public virtual DbSet<Privilage> Privilages { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<UserInfo> UserInfos { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Item>(entity =>
            {
                entity.HasKey(e => e.ItemName)
                    .HasName("PK__items__ACA52A9603B2879C");

                entity.ToTable("items");

                entity.Property(e => e.ItemName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("item_name");

                entity.Property(e => e.ItemId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("item_id");

                entity.Property(e => e.ItemQuentity)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("item_quentity");

                entity.Property(e => e.ItemType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("item_type");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Items)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("user_item_pk");
            });

            modelBuilder.Entity<ItemsBalance>(entity =>
            {
                entity.HasKey(e => e.ItemBalName)
                    .HasName("PK__items_Ba__BE2263A75F36E2AE");

                entity.ToTable("items_Balance");

                entity.Property(e => e.ItemBalName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemBal_name");

                entity.Property(e => e.ItemBalAmount)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("itemBal_amount");

                entity.Property(e => e.ItemBalId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("itemBal_id");

                entity.Property(e => e.ItemBalType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemBal_type");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ItemsBalances)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("user_ItemBal_fk");
            });

            modelBuilder.Entity<Privilage>(entity =>
            {
                entity.ToTable("privilages");

                entity.Property(e => e.PrivilageId).HasColumnName("privilage_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Privilages)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("user_privilage_pk");
            });

            modelBuilder.Entity<Store>(entity =>
            {
                entity.ToTable("stores");

                entity.HasIndex(e => e.StorePhone, "UQ__stores__34EB5449026CA15A")
                    .IsUnique();

                entity.Property(e => e.StoreId).HasColumnName("store_id");

                entity.Property(e => e.StoreMaster)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("store_master");

                entity.Property(e => e.StoreName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("store_name");

                entity.Property(e => e.StorePhone)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("store_phone");

                entity.Property(e => e.StorePlace)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("store_place");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Stores)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("user_store_pk");
            });

            modelBuilder.Entity<UserInfo>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("user_pk");

                entity.ToTable("UserInfo");

                entity.HasIndex(e => e.Phone, "UQ__UserInfo__B43B145FDD6FC36C")
                    .IsUnique();

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.Phone)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("phone");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("user_name");

                entity.Property(e => e.UserPassword)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("user_password");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}